name: Deploy to Pi Cluster

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/jimdel  # Replace with your Docker Hub username

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
    - name: Checkout webapp repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=main-${{ github.sha }}
          type=raw,value=latest
          type=ref,event=branch
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64  # Multi-platform build for Pi compatibility
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  trigger-deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Trigger deployment in config repo
      run: |
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.CONFIG_REPO_TRIGGER_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository_owner }}/pi-cluster-config/dispatches \
          -d '{
            "event_type": "jimdel-build",
            "client_payload": {
              "ref": "${{ github.ref_name }}",
              "sha": "${{ github.sha }}",
              "repository": "${{ github.repository }}",
              "image_tag": "main-${{ github.sha }}",
              "registry": "docker.io"
            }
          }'
